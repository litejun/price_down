package ObserverPattern;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class WeatherData implements Subject{
	private ArrayList observers;
	private float temperature;
	private float humidity;
	private float pressure;
	
	public WeatherData() {
		observers = new ArrayList();
	}
	
	@Override
	public void registerObserver(Observer o){
		observers.add(o);
	}
	
	@Override
	public void removeObserver(Observer o){
		int i = observers.size();
		
		if(i >= 0)
			observers.remove(o);
	}
	
	@Override
	public void notifyObservers(){
		Observer observer;
		
		for(int i = 0; i < observers.size(); i++){
			observer = observers.get(i);
			observer.update(temperature, humidity, pressure);
		}
	}
	
	public void notifyObservers(List<Observer> observerList){
		Iterator<Observer> itr = observerList.iterator();
		Observer observer;
		
		while (itr.hasNext()){
			observer = itr.next();
			observer.update(temperature, humidity, pressure);
		}
	}
	
	public void setMeasurements(float temperature, float humidity, float pressure){
		this.temperature = temperature;
		this.humidity = humidity;
		this.pressure = pressure;
		
		measurementsChanged();
	}
	
	public void measurementsChanged(){
		List<Observer> observerList = observers.subList(0,2);
		notifyObservers(observerList);
	}
}
