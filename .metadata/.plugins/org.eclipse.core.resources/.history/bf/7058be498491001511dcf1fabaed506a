import java.util.Scanner;

import Olognsort.Quick_sort;

public class Test_of_Sort {
	public static void main(String args[]){
		int capacity = 10;
        int randomBound = 100;
        Quick_sort quick = new Quick_sort();
        
        // 정렬 대상 생성
        Integer[] array = quick.initArray(capacity, randomBound);
        quick.printArray(array);
        
        System.out.println("------------ start -------------");
        
        quick.sort(array, 0, array.length - 1);	
	}
	
	public Integer[] initArray(int capacity, int randomBound) {
		Scanner scan = new Scanner(System.in);
		
		int temp, size;
		System.out.println("배열의 크기를 입력하세요");
		size = scan.nextInt();
		
		System.out.println("랜덤으로 배열에 수를 집어넣겠습니다.");
		Integer[] array = new Integer[size];
			for(int i = 0; i<array.length;i++){
				array[i] = (int)(Math.random()*1000);
			}
		System.out.println("초기 배열의 값들입니다.");
			for(int i=0;i<array.length;i++){
				System.out.print(array[i] + " ");
			}
		System.out.println();
		System.out.println("퀵 정렬을 시작합니다.");
        return array;
    }
	
	public class Quick_sort {

	    /**
	     * 퀵 소트 처리
	     * 
	     * @param array
	     * @param left
	     * @param right
	     */
	    public void sort(Integer[] array, int left, int right) {
	    	int i, j;
	    	int p, tmp;
	    	
	    	if(left<right){
	    		i=left;
	    		j=right;
	    		p=array[left];
	    		
	    		while(i<j)
	    		{
	    			while(array[j]>p)	j--;
	    			while(i<j && array[i]<=p)	i++;
	    			
	    			tmp = array[i];
	    			array[i] = array[j];
	    			array[j] = tmp;
	    			
	    		}
	    		printArray(array);
	    		array[left] = array[i];
	    		array[i] = p;
	    		
	    		sort(array,left,i-1);
	    		sort(array,i+1,right);
	    	}
	    }
	    
	    public <E> void printArray(E[] array) {
	        for (E value : array) {
	            System.out.print(value);
	            System.out.print(" ");
	        }
	        System.out.println("");
	    }
	}
}
