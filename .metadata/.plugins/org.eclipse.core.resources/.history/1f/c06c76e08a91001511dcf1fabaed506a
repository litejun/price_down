package Olognsort;

import java.util.Scanner;

public class Heap_sort {
	
	public static void heap(int array[]){

		System.out.println("힙 정렬을 시작합니다.");
		
		Heap heap = new Heap();
		
		for(int i = 0; i< array.length;i++){
			heap.insertHeap(array[i]);
		}
		
		for(int i = array.length - 1; i>=0; --i){
			array[i] = heap.deleteHeap();
		}
		System.out.println("힙 정렬 완료");
		for(int i = 0; i<array.length;i++){
		System.out.print(array[i] + " ");
		}
		
		
	}
}
class Heap {
	private int heapSize;
	private int itemHeap[];
	
	public Heap(){
		heapSize = 0;
		itemHeap = new int[500];
	}
	
	public void insertHeap(int item){
		int i = ++heapSize;
		
		while((i != 1) && (item > itemHeap[i / 2])){
			itemHeap[i] = itemHeap[i / 2];
			i /= 2;
		}
		
		itemHeap[i] = item;
	}
	
	public int deleteHeap(){
		int parent, child;
		int item, tmp;
		item = itemHeap[1];
		tmp = itemHeap[heapSize--];
		parent = 1;
		child = 2;
		
		while(child <= heapSize){
			if ((child < heapSize) && (itemHeap[child] < itemHeap[child+1]))
				child++;
			
			if (tmp >= itemHeap[child])
				break;
			
			itemHeap[parent] = itemHeap[child];
			parent = child;
			child *= 2;
		}
		
		itemHeap[parent] = tmp;
		return item;
	}
}